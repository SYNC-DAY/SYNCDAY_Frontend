name: Deploy to AWS Elastic Beanstalk

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - "deploy"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm' 

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Generate deployment package
      run: |
        # 기본 디렉토리 구조 생성
        mkdir -p deploy/.platform/nginx/conf.d
      
        # nginx 설정 파일 복사 및 확인
        if [ -f .platform/nginx/nginx.conf ]; then
          cp .platform/nginx/nginx.conf deploy/.platform/nginx/
        else
          echo "Error: nginx.conf not found in expected location"
          exit 1
        fi
      
        # 프로젝트 필수 파일 복사
        cp package*.json deploy/
        cp server.js deploy/
        cp Procfile deploy/
      
        # 빌드된 애플리케이션 파일 복사
        if [ -d "dist" ] && [ "$(ls -A dist)" ]; then
          cp -r dist/* deploy/
        else
          echo "Error: dist folder is empty or doesn't exist"
          exit 1
        fi
      
        # 배포 패키지 생성 (숨김 파일 제외)
        cd deploy && zip -r deploy.zip . -x ".*" -x "__MACOSX"
        

    - name: Verify deployment package
      run: |
        echo "Checking deployment package contents..."
        cd deploy && unzip -l deploy.zip
        echo "Deployment package size: $(ls -lh deploy.zip | awk '{print $5}')"

    - name: Get current time
      id: current-time
      run: echo "formattedTime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: Beanstalk Deploy
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: syncday-front-blue
        environment_name: Syncday-front-blue-env
        version_label: "syncdayfront-${{ github.sha }}-${{ steps.current-time.outputs.formattedTime }}"
        region: ap-northeast-2
        deployment_package: deploy/deploy.zip
        use_existing_version_if_available: false
        wait_for_deployment: true 
        wait_for_environment_recovery: true  